{
  "swagger": "2.0",
  "info": {
    "description": "Party Registry Proxy API documentation",
    "title": "selc-party-registry-proxy",
    "version": "0.0.1-SNAPSHOT"
  },
  "host": "localhost:80",
  "basePath": "%7BbasePath%7D",
  "schemes": [
    "http"
  ],
  "paths": {
    "/aoo": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Desired page number for result pagination. It is optional, and the default value is 1 when not specified",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of items per page. It is optional, and the default value is 10 when not specified",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AOOsResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "aoo"
        ],
        "description": "Returns the AOO list",
        "operationId": "findAllUsingGET",
        "summary": "Retrieve all AOO from IPA"
      }
    },
    "/aoo/{codiceUniAoo}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "AOO unique identifier, the same of Id",
            "in": "path",
            "name": "codiceUniAoo",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter from origin category",
            "in": "query",
            "name": "categories",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AOOResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "aoo"
        ],
        "description": "Returns an AOO",
        "operationId": "findByUnicodeUsingGET",
        "summary": "Retrieve an AOO given its code"
      }
    },
    "/categories": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Describes which is the source of data",
            "enum": [
              "ANAC",
              "INFOCAMERE",
              "IPA",
              "IVASS",
              "static"
            ],
            "in": "query",
            "name": "origin",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired page number for result pagination. It is optional, and the default value is 1 when not specified",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of items per page. It is optional, and the default value is 10 when not specified",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoriesResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "category"
        ],
        "description": "Returns the categories list",
        "operationId": "findCategoriesUsingGET",
        "summary": "Get all categories"
      }
    },
    "/geotaxonomies": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "geographic taxonomy description",
            "in": "query",
            "name": "description",
            "required": true,
            "type": "string"
          },
          {
            "description": "identifies the page 0-based index, default to 0",
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "identifies the number of entries in a page, default to 10",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema":{"$ref":"#/definitions/GeographicTaxonomyResourceArray"}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "GeographicTaxonomies"
        ],
        "description": "retrieves the geographic taxonomies by description",
        "operationId": "retrieveGeoTaxonomiesByDescriptionUsingGET",
        "summary": "retrieves the geographic taxonomies by description"
      }
    },
    "/geotaxonomies/{geotaxId}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Geographic taxonomy unique identifier ",
            "in": "path",
            "name": "geotaxId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeographicTaxonomyResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "GeographicTaxonomies"
        ],
        "description": "retrieves the geographic taxonomy by code",
        "operationId": "retrieveGeoTaxonomiesByCodeUsingGET",
        "summary": "retrieves the geographic taxonomy by code"
      }
    },
    "/info-camere/institutions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetInstitutionsByLegalDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessesResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "infocamere"
        ],
        "description": "Get the list of companies represented by the tax code of the person (physical or juridical) passed as a parameter",
        "operationId": "institutionsByLegalTaxIdUsingPOST",
        "summary": "Get institutions by legal tax id"
      }
    },
    "/institutions": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "if passed, the result is filtered based on the contained value.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired page number for result pagination. It is optional, and the default value is 1 when not specified",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of items per page. It is optional, and the default value is 10 when not specified",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter from origin category",
            "in": "query",
            "name": "categories",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstitutionsResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "institution"
        ],
        "description": "Returns a list of Institutions.",
        "operationId": "searchUsingGET",
        "summary": "Search institutions"
      }
    },
    "/institutions/{id}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "The institution ID. It change semantic based on the origin param value (see notes)",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Describes which is the source of data",
            "enum": [
              "ANAC",
              "INFOCAMERE",
              "IPA",
              "IVASS",
              "static"
            ],
            "in": "query",
            "name": "origin",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter from origin category",
            "in": "query",
            "name": "categories",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstitutionResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "institution"
        ],
        "description": "Returns a single institution. If 'origin' param is filled, the ID to find is treated as 'originId' ($ref: '#/components/schemas/Institution'); otherwise is treated as 'id' ($ref: '#/components/schemas/Institution') ",
        "operationId": "findInstitutionUsingGET",
        "summary": "Find institution by ID"
      }
    },
    "/insurance-companies": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Optional search field. Users can provide a search string to filter results",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired page number for result pagination. It is optional, and the default value is 1 when not specified",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of items per page. It is optional, and the default value is 10 when not specified",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InsuranceCompaniesResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "insurance-companies"
        ],
        "description": "Returns a list of insurance companies",
        "operationId": "searchUsingGET_1",
        "summary": "Search insurance company"
      }
    },
    "/insurance-companies/{taxId}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "taxCode of insurance company",
            "in": "path",
            "name": "taxId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InsuranceCompanyResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "insurance-companies"
        ],
        "description": "Returns only one insurance company.",
        "operationId": "searchByTaxCodeUsingGET",
        "summary": "Search insurance company by its taxCode"
      }
    },
    "/national-registries/legal-address": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "taxId",
            "in": "query",
            "name": "taxId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LegalAddressResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "nationalRegistries"
        ],
        "description": "Get the legal address of the business",
        "operationId": "legalAddressUsingGET",
        "summary": "Retrieve data from AdE and InfoCamere"
      }
    },
    "/national-registries/verify-legal": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "taxId",
            "in": "query",
            "name": "taxId",
            "required": true,
            "type": "string"
          },
          {
            "description": "vatNumber",
            "in": "query",
            "name": "vatNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LegalVerificationResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "nationalRegistries"
        ],
        "description": "verify if given taxId is legal of given institution identified with vatNumber",
        "operationId": "verifyLegalUsingGET",
        "summary": "Retrieve data from AdE and InfoCamere"
      }
    },
    "/origins/{origin}/categories/{code}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Describes which is the source of data",
            "enum": [
              "ANAC",
              "INFOCAMERE",
              "IPA",
              "IVASS",
              "static"
            ],
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "code",
            "in": "path",
            "name": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "category"
        ],
        "description": "Returns a category",
        "operationId": "findCategoryUsingGET",
        "summary": "Get a category"
      }
    },
    "/stations": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Optional search field. Users can provide a search string to filter results",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "description": "Desired page number for result pagination. It is optional, and the default value is 1 when not specified",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of items per page. It is optional, and the default value is 10 when not specified",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StationsResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "stations"
        ],
        "description": "Returns a list of station.",
        "operationId": "searchUsingGET_2",
        "summary": "Search station"
      }
    },
    "/stations/{taxId}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "taxCode of station",
            "in": "path",
            "name": "taxId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StationResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "stations"
        ],
        "description": "Returns only one station.",
        "operationId": "searchByTaxCodeUsingGET_1",
        "summary": "Search station by its taxCode"
      }
    },
    "/uo": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Desired page number for result pagination. It is optional, and the default value is 1 when not specified",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Maximum number of items per page. It is optional, and the default value is 10 when not specified",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UOsResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "uo"
        ],
        "description": "Returns the UO list",
        "operationId": "findAllUsingGET_1",
        "summary": "Retrieve all UO from IPA"
      }
    },
    "/uo/{codiceUniAoo}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "UO unique identifier, the same of Id",
            "in": "path",
            "name": "codiceUniAoo",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter from origin category",
            "in": "query",
            "name": "categories",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UOResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "uo"
        ],
        "description": "Returns a UO",
        "operationId": "findByUnicodeUsingGET_1",
        "summary": "Retrieve a UO given its code"
      }
    }
  },
  "definitions" : {"STRINGWrapper":{"type": "string"},"STRINGArray":{"type": "array", "items": {"type": "string"}},"GeographicTaxonomyResourceArray":{"type": "array", "items": {"$ref": "#/definitions/GeographicTaxonomyResource"}},
    "AOOResource": {
      "properties": {
        "cap": {
          "type": "string"
        },
        "codAoo": {
          "description": "AOO code",
          "type": "string"
        },
        "codiceCatastaleComune": {
          "description": "AOO land registry code",
          "type": "string"
        },
        "codiceComuneISTAT": {
          "description": "AOO istat code",
          "type": "string"
        },
        "codiceFiscaleEnte": {
          "description": "AOO fiscal code",
          "type": "string"
        },
        "codiceIpa": {
          "description": "AOO ipa code",
          "type": "string"
        },
        "codiceUniAoo": {
          "description": "AOO unique identifier, the same of Id",
          "type": "string"
        },
        "cognomeResponsabile": {
          "description": "AOO manager lastname",
          "type": "string"
        },
        "dataAggiornamento": {
          "description": "Identifies date of last update on the specific AOO",
          "type": "string"
        },
        "dataIstituzione": {
          "description": "Identifies date of first creation for AOO",
          "type": "string"
        },
        "denominazioneAoo": {
          "description": "AOO description",
          "type": "string"
        },
        "denominazioneEnte": {
          "description": "AOO parent description",
          "type": "string"
        },
        "fax": {
          "description": "AOO fax",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "indirizzo": {
          "description": "AOO address",
          "type": "string"
        },
        "mail1": {
          "type": "string"
        },
        "mailResponsabile": {
          "description": "AOO manager email",
          "type": "string"
        },
        "nomeResponsabile": {
          "description": "AOO manager firstname",
          "type": "string"
        },
        "origin": {
          "description": "{swagger.model.*.origin}",
          "enum": [
            "ANAC",
            "INFOCAMERE",
            "IPA",
            "IVASS",
            "static"
          ],
          "type": "string"
        },
        "protocolloInformatico": {
          "description": "AOO IT protocol",
          "type": "string"
        },
        "telefono": {
          "description": "AOO phone number",
          "type": "string"
        },
        "telefonoResponsabile": {
          "description": "AOO manager phone number",
          "type": "string"
        },
        "tipoMail1": {
          "type": "string"
        },
        "uriprotocolloInformatico": {
          "type": "string"
        }
      },
      "title": "AOOResource",
      "type": "object"
    },
    "AOOsResource": {
      "properties": {
        "count": {
          "description": "Total count of items",
          "format": "int64",
          "type": "integer"
        },
        "items": {
          "description": "List of AOO resource",
          "items": {
            "$ref": "#/definitions/AOOResource"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "items"
      ],
      "title": "AOOsResource",
      "type": "object"
    },
    "BusinessResource": {
      "properties": {
        "businessName": {
          "type": "string"
        },
        "businessTaxId": {
          "type": "string"
        }
      },
      "title": "BusinessResource",
      "type": "object"
    },
    "BusinessesResource": {
      "properties": {
        "businesses": {
          "items": {
            "$ref": "#/definitions/BusinessResource"
          },
          "type": "array"
        },
        "legalTaxId": {
          "type": "string"
        },
        "requestDateTime": {
          "type": "string"
        }
      },
      "title": "BusinessesResource",
      "type": "object"
    },
    "CategoriesResource": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/CategoryResource"
          },
          "type": "array"
        }
      },
      "required": [
        "items"
      ],
      "title": "CategoriesResource",
      "type": "object"
    },
    "CategoryResource": {
      "properties": {
        "code": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "description": "Describes which is the source of data",
          "enum": [
            "ANAC",
            "INFOCAMERE",
            "IPA",
            "IVASS",
            "static"
          ],
          "type": "string"
        }
      },
      "title": "CategoryResource",
      "type": "object"
    },
    "GeographicTaxonomyResource": {
      "properties": {
        "code": {
          "description": "Geographic taxonomy unique identifier ",
          "type": "string"
        },
        "country": {
          "description": "Geographic taxonomy country",
          "type": "string"
        },
        "country_abbreviation": {
          "description": "Geographic taxonomy country abbreviation",
          "type": "string"
        },
        "desc": {
          "description": "Geographic taxonomy description",
          "type": "string"
        },
        "enabled": {
          "description": "Geographic taxonomy enabled",
          "example": false,
          "type": "boolean"
        },
        "istat_code": {
          "description": "Geographic taxonomy istat code",
          "type": "string"
        },
        "province_abbreviation": {
          "description": "Geographic taxonomy province abbreviation",
          "type": "string"
        },
        "province_id": {
          "description": "Geographic taxonomy province unique identifier",
          "type": "string"
        },
        "region_id": {
          "description": "Geographic taxonomy region unique identifier",
          "type": "string"
        }
      },
      "title": "GeographicTaxonomyResource",
      "type": "object"
    },
    "GetInstitutionsByLegalDto": {
      "properties": {
        "filter": {
          "$ref": "#/definitions/GetInstitutionsByLegalFilterDto"
        }
      },
      "title": "GetInstitutionsByLegalDto",
      "type": "object"
    },
    "GetInstitutionsByLegalFilterDto": {
      "properties": {
        "legalTaxId": {
          "type": "string"
        }
      },
      "title": "GetInstitutionsByLegalFilterDto",
      "type": "object"
    },
    "InstitutionResource": {
      "properties": {
        "address": {
          "description": "Institution address",
          "type": "string"
        },
        "aoo": {
          "description": "Area organizzativa omogenea",
          "type": "string"
        },
        "category": {
          "description": "Institution category",
          "type": "string"
        },
        "description": {
          "description": "Institution description",
          "type": "string"
        },
        "digitalAddress": {
          "description": "Institution digital address",
          "type": "string"
        },
        "id": {
          "description": "Semantic id to recognize a party between origins (or externalId)",
          "type": "string"
        },
        "istatCode": {
          "description": "Institution istat Code",
          "type": "string"
        },
        "o": {
          "description": "o",
          "type": "string"
        },
        "origin": {
          "description": "Describes which is the source of data",
          "enum": [
            "ANAC",
            "INFOCAMERE",
            "IPA",
            "IVASS",
            "static"
          ],
          "type": "string"
        },
        "originId": {
          "description": "Id of the institution from its origin",
          "type": "string"
        },
        "ou": {
          "description": "ou",
          "type": "string"
        },
        "taxCode": {
          "description": "Institution fiscal code",
          "type": "string"
        },
        "zipCode": {
          "description": "Institution zipCode",
          "type": "string"
        }
      },
      "title": "InstitutionResource",
      "type": "object"
    },
    "InstitutionsResource": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/InstitutionResource"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "items"
      ],
      "title": "InstitutionsResource",
      "type": "object"
    },
    "InsuranceCompaniesResource": {
      "properties": {
        "count": {
          "description": "list of companies resource size",
          "format": "int64",
          "type": "integer"
        },
        "items": {
          "description": "list of insurance companies resource",
          "items": {
            "$ref": "#/definitions/InsuranceCompanyResource"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "items"
      ],
      "title": "InsuranceCompaniesResource",
      "type": "object"
    },
    "InsuranceCompanyResource": {
      "properties": {
        "address": {
          "description": "Identifies legal address of insurance company",
          "type": "string"
        },
        "description": {
          "description": "insurance company's name",
          "type": "string"
        },
        "digitalAddress": {
          "description": "insurance company's mail address",
          "type": "string"
        },
        "id": {
          "description": "insurance company's unique identifier",
          "type": "string"
        },
        "origin": {
          "description": "Describes which is the source of data",
          "enum": [
            "ANAC",
            "INFOCAMERE",
            "IPA",
            "IVASS",
            "static"
          ],
          "type": "string"
        },
        "originId": {
          "description": "insurance company's IVASS unique identifier",
          "type": "string"
        },
        "registerType": {
          "description": "Identifies register type for company",
          "type": "string"
        },
        "taxCode": {
          "description": "taxCode of insurance company",
          "type": "string"
        },
        "workType": {
          "description": "Identifies work type for company",
          "type": "string"
        }
      },
      "title": "InsuranceCompanyResource",
      "type": "object"
    },
    "InvalidParam": {
      "properties": {
        "name": {
          "description": "Invalid parameter name.",
          "type": "string"
        },
        "reason": {
          "description": "Invalid parameter reason.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "reason"
      ],
      "title": "InvalidParam",
      "type": "object"
    },
    "LegalAddressResponse": {
      "properties": {
        "address": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "LegalAddressResponse",
      "type": "object"
    },
    "LegalVerificationResult": {
      "properties": {
        "resultCode": {
          "type": "string"
        },
        "resultDetail": {
          "type": "string"
        },
        "verificationResult": {
          "type": "boolean"
        }
      },
      "title": "LegalVerificationResult",
      "type": "object"
    },
    "Problem": {
      "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)",
      "properties": {
        "detail": {
          "description": "Human-readable description of this specific problem.",
          "type": "string"
        },
        "instance": {
          "description": "A URI that describes where the problem occurred.",
          "type": "string"
        },
        "invalidParams": {
          "description": "A list of invalid parameters details.",
          "items": {
            "$ref": "#/definitions/InvalidParam"
          },
          "type": "array"
        },
        "status": {
          "description": "The HTTP status code.",
          "example": 500,
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "description": "Short human-readable summary of the problem.",
          "type": "string"
        },
        "type": {
          "description": "A URL to a page with more details regarding the problem.",
          "type": "string"
        }
      },
      "required": [
        "status",
        "title"
      ],
      "title": "Problem",
      "type": "object"
    },
    "StationResource": {
      "properties": {
        "anacEnabled": {
          "description": "Identifies if ANAC station is enabled",
          "example": false,
          "type": "boolean"
        },
        "anacEngaged": {
          "description": "Identifies if ANAC station is engaged",
          "example": false,
          "type": "boolean"
        },
        "description": {
          "description": "station's name",
          "type": "string"
        },
        "digitalAddress": {
          "description": "station's mail address",
          "type": "string"
        },
        "id": {
          "description": "station's unique identifier",
          "type": "string"
        },
        "origin": {
          "description": "Describes which is the source of data",
          "enum": [
            "ANAC",
            "INFOCAMERE",
            "IPA",
            "IVASS",
            "static"
          ],
          "type": "string"
        },
        "originId": {
          "description": "station's anac unique identifier",
          "type": "string"
        },
        "taxCode": {
          "description": "taxCode of station",
          "type": "string"
        }
      },
      "title": "StationResource",
      "type": "object"
    },
    "StationsResource": {
      "properties": {
        "count": {
          "description": "list of station resource size",
          "format": "int64",
          "type": "integer"
        },
        "items": {
          "description": "list of station resource",
          "items": {
            "$ref": "#/definitions/StationResource"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "items"
      ],
      "title": "StationsResource",
      "type": "object"
    },
    "UOResource": {
      "properties": {
        "cap": {
          "type": "string"
        },
        "codiceCatastaleComune": {
          "description": "UO land registry code",
          "type": "string"
        },
        "codiceComuneISTAT": {
          "description": "UO istat code",
          "type": "string"
        },
        "codiceFiscaleEnte": {
          "description": "UO fiscal code",
          "type": "string"
        },
        "codiceIpa": {
          "description": "UO ipa code",
          "type": "string"
        },
        "codiceUniAoo": {
          "description": "AOO unique identifier, the same of Id",
          "type": "string"
        },
        "codiceUniUo": {
          "description": "UO unique identifier, the same of Id",
          "type": "string"
        },
        "codiceUniUoPadre": {
          "description": "UO parent code",
          "type": "string"
        },
        "cognomeResponsabile": {
          "description": "UO manager lastname",
          "type": "string"
        },
        "dataAggiornamento": {
          "description": "Identifies date of last update on the specific UO",
          "type": "string"
        },
        "dataIstituzione": {
          "description": "Identifies date of first creation for UO",
          "type": "string"
        },
        "denominazioneEnte": {
          "description": "UO parent description",
          "type": "string"
        },
        "descrizioneUo": {
          "description": "UO description",
          "type": "string"
        },
        "fax": {
          "description": "UO fax",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "indirizzo": {
          "description": "UO address",
          "type": "string"
        },
        "mail1": {
          "type": "string"
        },
        "mailResponsabile": {
          "description": "UO manager email",
          "type": "string"
        },
        "nomeResponsabile": {
          "description": "UO manager firstname",
          "type": "string"
        },
        "origin": {
          "description": "Describes which is the source of data",
          "enum": [
            "ANAC",
            "INFOCAMERE",
            "IPA",
            "IVASS",
            "static"
          ],
          "type": "string"
        },
        "telefono": {
          "description": "UO phone number",
          "type": "string"
        },
        "telefonoResponsabile": {
          "description": "UO manager phone number",
          "type": "string"
        },
        "tipoMail1": {
          "type": "string"
        },
        "url": {
          "description": "UO url",
          "type": "string"
        }
      },
      "title": "UOResource",
      "type": "object"
    },
    "UOsResource": {
      "properties": {
        "count": {
          "description": "Total count of items",
          "format": "int64",
          "type": "integer"
        },
        "items": {
          "description": "List of UO resource",
          "items": {
            "$ref": "#/definitions/UOResource"
          },
          "type": "array"
        }
      },
      "required": [
        "count",
        "items"
      ],
      "title": "UOsResource",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "Geographic Taxonomies Controller",
      "name": "GeographicTaxonomies"
    },
    {
      "description": "AOO Controller",
      "name": "aoo"
    },
    {
      "description": "Category operations",
      "name": "category"
    },
    {
      "description": "Info Camere Controller",
      "name": "infocamere"
    },
    {
      "description": "Institution operations",
      "name": "institution"
    },
    {
      "description": "Ivass Controller",
      "name": "insurance-companies"
    },
    {
      "description": "National Registries Controller",
      "name": "nationalRegistries"
    },
    {
      "description": "Station Controller",
      "name": "stations"
    },
    {
      "description": "UO Controller",
      "name": "uo"
    }
  ],
  "x-components": {}
}
