import { Party } from '../../model/Party';

export const mockedParties: Array<Party> = [
  {
    userRole: 'ADMIN',
    description: 'Comune di Bari',
    urlLogo: 'image',
    status: 'ACTIVE',
    partyId: '1',
    digitalAddress: 'comune.bari@pec.it',
    fiscalCode: '111111111111',
    category: 'Comuni e loro Consorzi e Associazioni',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    externalId: 'externalId1',
    originId: 'originId1',
    origin: 'IPA',
    institutionType: 'PA',
    recipientCode: 'CGDAS23A',
    geographicTaxonomies: [{ code: '058091', desc: 'Roma - Comune' }], // Use case with one taxonomy
    vatNumber: '111111111141',
    supportEmail: '',
  },
  {
    userRole: 'ADMIN',
    description: 'Comune di Milano',
    urlLogo: 'image',
    status: 'PENDING',
    partyId: '2',
    digitalAddress: 'comune.milano@pec.it',
    fiscalCode: 'fiscalCodeMilano',
    category: 'Comuni e loro Consorzi e Associazioni',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    externalId: 'externalId2',
    originId: 'originId2',
    origin: 'IPA',
    institutionType: 'PA',
    recipientCode: 'CGDAS23B',
    geographicTaxonomies: [], // Use case with no taxonomies
    vatNumber: '81001510528',
  },
  {
    userRole: 'ADMIN',
    description: 'Comune di Roma',
    urlLogo: 'image',
    status: 'ACTIVE',
    partyId: '3',
    digitalAddress: 'comune.roma@pec.it',
    fiscalCode: 'fiscalCodeRoma',
    category: 'Comuni e loro Consorzi e Associazioni',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    externalId: 'externalId3',
    originId: 'originId3',
    origin: 'IPA',
    institutionType: 'PA',
    recipientCode: 'CGDAS23C',
    geographicTaxonomies: [
      // Use case with two taxonomies
      { code: '058091', desc: 'Roma - Comune' },
      { code: '015146', desc: 'Milano - Comune' },
    ],
    vatNumber: '111122211111',
  },
  {
    userRole: 'LIMITED',
    description: 'Comune di Napoli',
    urlLogo: 'image',
    status: 'ACTIVE',
    partyId: '4',
    digitalAddress: 'comune.napoli@pec.it',
    fiscalCode: 'fiscalCodeNapoli',
    category: 'Comuni e loro Consorzi e Associazioni',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    externalId: 'externalId4',
    originId: 'originId4',
    origin: 'IPA',
    institutionType: 'PA',
    recipientCode: 'CGDAS23D',
    geographicTaxonomies: [
      { code: '5555678', desc: 'Comune di Milano' },
      { code: '8853441', desc: 'Comune di Roma' },
    ],
    vatNumber: '111122211111',
  },
  {
    userRole: 'ADMIN',
    description: 'AGENCY ONBOARDED',
    urlLogo: 'https://selcdcheckoutsa.z6.web.core.windows.net/institutions/onboarded/logo.png',
    status: 'ACTIVE',
    partyId: 'onboarded',
    digitalAddress: 'comune.onboarded@pec.it',
    fiscalCode: 'fiscalCodeONBOARDED',
    category: 'Comuni e loro Consorzi e Associazioni',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    externalId: 'externalId5',
    originId: 'originId5',
    origin: 'MOCK',
    institutionType: 'GSP',
    recipientCode: 'CGDAS23E',
    geographicTaxonomies: [],
    vatNumber: '111122211111',
  },
  // Use case of party with status "TOBEVALIDATED"
  {
    userRole: 'ADMIN',
    description: `Commissario straordinario per la realizzazione di approdi temporanei e di interventi complementari per la salvaguardia di Venezia e della sua laguna e ulteriori interventi per la salvaguardia della laguna di Venezia`,
    urlLogo: 'image',
    status: 'TOBEVALIDATED',
    partyId: '5',
    digitalAddress: 'comune.veneto@pec.it',
    fiscalCode: 'fiscalCodeVeneto',
    category: 'Comuni e loro Consorzi e Associazioni',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    externalId: 'externalId1',
    originId: 'originId1',
    origin: 'IPA',
    institutionType: 'GSP',
    recipientCode: 'CCBV421K',
    geographicTaxonomies: [],
    vatNumber: '111122211111',
  },
  {
    userRole: 'ADMIN',
    description: 'Scuola Media Oswald Von Wolkenstein di Bressa',
    urlLogo: 'image',
    status: 'ACTIVE',
    partyId: '6',
    digitalAddress: 'comune.bressanone@pec.it',
    fiscalCode: '111122211111',
    category: 'Comuni e loro Consorzi e Associazioni',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Gestore di servizi pubblici',
    externalId: 'externalId6',
    originId: 'originId6',
    origin: 'IPA',
    institutionType: 'GSP',
    recipientCode: 'CGDAS23F',
    geographicTaxonomies: [],
    vatNumber: '111122211111',
  },
  // Usable when not mocking the BE
  {
    partyId: 'f572bb09-b689-4785-8ea8-4c7a8b081998',
    externalId: '00856930102',
    originId: 'c_d969',
    origin: 'IPA',
    institutionType: 'PA',
    description: 'Comune di Genova',
    category: 'Comuni e loro Consorzi e Associazioni',
    fiscalCode: '00856930102',
    userRole: 'ADMIN',
    status: 'ACTIVE',
    digitalAddress: 'comunegenova@postemailcertificata.it',
    urlLogo:
      'https://selcdcheckoutsa.z6.web.core.windows.net/institutions/f572bb09-b689-4785-8ea8-4c7a8b081998/logo.png',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    recipientCode: 'CGDAS23G',
    geographicTaxonomies: [],
    vatNumber: '222222211111',
  },
  // Usable when not mocking the BE
  {
    partyId: '7784b9d3-e834-4342-a6ef-d0566b058af2',
    externalId: '00441340122',
    originId: 'c_l682',
    origin: 'IPA',
    institutionType: 'PA',
    description: 'Comune di Varese',
    category: 'Comuni e loro Consorzi e Associazioni',
    fiscalCode: '00441340122',
    userRole: 'ADMIN',
    status: 'ACTIVE',
    digitalAddress: 'protocollo@comune.varese.legalmail.it',
    urlLogo:
      'https://selcdcheckoutsa.z6.web.core.windows.net/institutions/7784b9d3-e834-4342-a6ef-d0566b058af2/logo.png',
    registeredOffice: 'Piazza della Scala, 2',
    zipCode: '20121',
    typology: 'Pubblica Amministrazione',
    recipientCode: 'CGDAS23V',
    geographicTaxonomies: [],
    vatNumber: '111122291111',
  },
  // Mock with institutionType = PSP
  {
    partyId: '9999b9b9-e111-2222-b1bb-d0566b058af2',
    externalId: '00348170101',
    originId: 'c_9999',
    origin: 'SELC',
    institutionType: 'PSP',
    description: 'Unicredit',
    category: 'Intermediario',
    fiscalCode: '00348170101',
    userRole: 'ADMIN',
    status: 'ACTIVE',
    digitalAddress: 'protocollo@unicredit.legalmail.it',
    urlLogo:
      'https://selcdcheckoutsa.z6.web.core.windows.net/institutions/7784b9d3-e834-4342-a6ef-d0566b058af2/logo.png',
    registeredOffice: 'Piazza Gae Aulenti, 3 - Tower A',
    zipCode: '20154',
    typology: 'Prestatore di Servizi a Pagamento',
    recipientCode: 'GGDAS99T',
    geographicTaxonomies: [],
    vatNumber: '111122211111',
  },
];

export const verifyFetchPartiesMockExecution = (parties: Array<Party>) => {
  expect(parties).toStrictEqual(mockedParties);
};

export const fetchParties = () => new Promise((resolve) => resolve(mockedParties));

export const verifyFetchPartyDetailsMockExecution = (party: Party) => {
  expect(party).toStrictEqual(mockedParties.filter((p) => p.partyId === party.partyId)[0]);
};

export const fetchPartyDetails = (
  partyId: string,
  _parties?: Array<Party>
): Promise<Party | null> =>
  new Promise((resolve) => resolve(mockedParties.find((p) => p.partyId === partyId) ?? null));
